// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: transaction.proto

package transaction

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProxyOrderReq_DFB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Req         *ProxyPayOrderRequest `protobuf:"bytes,1,opt,name=req,proto3" json:"req,omitempty"`
	Rate        *CorrespondMerChnRate `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"`
	BalanceType string                `protobuf:"bytes,3,opt,name=balanceType,proto3" json:"balanceType,omitempty"`
}

func (x *ProxyOrderReq_DFB) Reset() {
	*x = ProxyOrderReq_DFB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyOrderReq_DFB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyOrderReq_DFB) ProtoMessage() {}

func (x *ProxyOrderReq_DFB) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyOrderReq_DFB.ProtoReflect.Descriptor instead.
func (*ProxyOrderReq_DFB) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *ProxyOrderReq_DFB) GetReq() *ProxyPayOrderRequest {
	if x != nil {
		return x.Req
	}
	return nil
}

func (x *ProxyOrderReq_DFB) GetRate() *CorrespondMerChnRate {
	if x != nil {
		return x.Rate
	}
	return nil
}

func (x *ProxyOrderReq_DFB) GetBalanceType() string {
	if x != nil {
		return x.BalanceType
	}
	return ""
}

type ProxyOrderResp_DFB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProxyOrderNo string `protobuf:"bytes,1,opt,name=ProxyOrderNo,proto3" json:"ProxyOrderNo,omitempty"`
}

func (x *ProxyOrderResp_DFB) Reset() {
	*x = ProxyOrderResp_DFB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyOrderResp_DFB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyOrderResp_DFB) ProtoMessage() {}

func (x *ProxyOrderResp_DFB) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyOrderResp_DFB.ProtoReflect.Descriptor instead.
func (*ProxyOrderResp_DFB) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *ProxyOrderResp_DFB) GetProxyOrderNo() string {
	if x != nil {
		return x.ProxyOrderNo
	}
	return ""
}

type ProxyPayOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessType   string  `protobuf:"bytes,1,opt,name=AccessType,proto3" json:"AccessType,omitempty"`
	MerchantId   string  `protobuf:"bytes,2,opt,name=MerchantId,proto3" json:"MerchantId,omitempty"`
	Sign         string  `protobuf:"bytes,3,opt,name=Sign,proto3" json:"Sign,omitempty"`
	NotifyUrl    string  `protobuf:"bytes,4,opt,name=NotifyUrl,proto3" json:"NotifyUrl,omitempty"`
	Language     string  `protobuf:"bytes,5,opt,name=Language,proto3" json:"Language,omitempty"`
	OrderNo      string  `protobuf:"bytes,6,opt,name=OrderNo,proto3" json:"OrderNo,omitempty"`
	BankId       string  `protobuf:"bytes,7,opt,name=BankId,proto3" json:"BankId,omitempty"`
	BankName     string  `protobuf:"bytes,8,opt,name=BankName,proto3" json:"BankName,omitempty"`
	BankProvince string  `protobuf:"bytes,9,opt,name=BankProvince,proto3" json:"BankProvince,omitempty"`
	BankCity     string  `protobuf:"bytes,10,opt,name=BankCity,proto3" json:"BankCity,omitempty"`
	BranchName   string  `protobuf:"bytes,11,opt,name=BranchName,proto3" json:"BranchName,omitempty"`
	BankNo       string  `protobuf:"bytes,12,opt,name=BankNo,proto3" json:"BankNo,omitempty"`
	OrderAmount  float64 `protobuf:"fixed64,13,opt,name=OrderAmount,proto3" json:"OrderAmount,omitempty"`
	DefrayName   string  `protobuf:"bytes,14,opt,name=DefrayName,proto3" json:"DefrayName,omitempty"`
	DefrayId     string  `protobuf:"bytes,15,opt,name=DefrayId,proto3" json:"DefrayId,omitempty"`
	DefrayMobile string  `protobuf:"bytes,16,opt,name=DefrayMobile,proto3" json:"DefrayMobile,omitempty"`
	DefrayEmail  string  `protobuf:"bytes,17,opt,name=DefrayEmail,proto3" json:"DefrayEmail,omitempty"`
	Currency     string  `protobuf:"bytes,18,opt,name=Currency,proto3" json:"Currency,omitempty"`
	PayTypeSubNo string  `protobuf:"bytes,19,opt,name=PayTypeSubNo,proto3" json:"PayTypeSubNo,omitempty"`
}

func (x *ProxyPayOrderRequest) Reset() {
	*x = ProxyPayOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyPayOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyPayOrderRequest) ProtoMessage() {}

func (x *ProxyPayOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyPayOrderRequest.ProtoReflect.Descriptor instead.
func (*ProxyPayOrderRequest) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *ProxyPayOrderRequest) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetNotifyUrl() string {
	if x != nil {
		return x.NotifyUrl
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetBankId() string {
	if x != nil {
		return x.BankId
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetBankName() string {
	if x != nil {
		return x.BankName
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetBankProvince() string {
	if x != nil {
		return x.BankProvince
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetBankCity() string {
	if x != nil {
		return x.BankCity
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetBankNo() string {
	if x != nil {
		return x.BankNo
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetOrderAmount() float64 {
	if x != nil {
		return x.OrderAmount
	}
	return 0
}

func (x *ProxyPayOrderRequest) GetDefrayName() string {
	if x != nil {
		return x.DefrayName
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetDefrayId() string {
	if x != nil {
		return x.DefrayId
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetDefrayMobile() string {
	if x != nil {
		return x.DefrayMobile
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetDefrayEmail() string {
	if x != nil {
		return x.DefrayEmail
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *ProxyPayOrderRequest) GetPayTypeSubNo() string {
	if x != nil {
		return x.PayTypeSubNo
	}
	return ""
}

type CorrespondMerChnRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MerchantCode        string  `protobuf:"bytes,1,opt,name=MerchantCode,proto3" json:"MerchantCode,omitempty"`
	ChannelPayTypesCode string  `protobuf:"bytes,2,opt,name=ChannelPayTypesCode,proto3" json:"ChannelPayTypesCode,omitempty"`
	ChannelCode         string  `protobuf:"bytes,3,opt,name=ChannelCode,proto3" json:"ChannelCode,omitempty"`
	PayTypeCode         string  `protobuf:"bytes,4,opt,name=PayTypeCode,proto3" json:"PayTypeCode,omitempty"`
	PayTypeCodeNum      string  `protobuf:"bytes,5,opt,name=PayTypeCodeNum,proto3" json:"PayTypeCodeNum,omitempty"`
	Designation         string  `protobuf:"bytes,6,opt,name=Designation,proto3" json:"Designation,omitempty"`
	DesignationNo       string  `protobuf:"bytes,7,opt,name=DesignationNo,proto3" json:"DesignationNo,omitempty"`
	Fee                 float64 `protobuf:"fixed64,8,opt,name=Fee,proto3" json:"Fee,omitempty"`
	HandlingFee         float64 `protobuf:"fixed64,9,opt,name=HandlingFee,proto3" json:"HandlingFee,omitempty"`
	ChFee               float64 `protobuf:"fixed64,10,opt,name=ChFee,proto3" json:"ChFee,omitempty"`
	ChHandlingFee       float64 `protobuf:"fixed64,11,opt,name=ChHandlingFee,proto3" json:"ChHandlingFee,omitempty"`
	SingleMinCharge     float64 `protobuf:"fixed64,12,opt,name=SingleMinCharge,proto3" json:"SingleMinCharge,omitempty"`
	SingleMaxCharge     float64 `protobuf:"fixed64,13,opt,name=SingleMaxCharge,proto3" json:"SingleMaxCharge,omitempty"`
	CurrencyCode        string  `protobuf:"bytes,14,opt,name=CurrencyCode,proto3" json:"CurrencyCode,omitempty"`
	ApiUrl              string  `protobuf:"bytes,15,opt,name=ApiUrl,proto3" json:"ApiUrl,omitempty"`
}

func (x *CorrespondMerChnRate) Reset() {
	*x = CorrespondMerChnRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CorrespondMerChnRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CorrespondMerChnRate) ProtoMessage() {}

func (x *CorrespondMerChnRate) ProtoReflect() protoreflect.Message {
	mi := &file_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CorrespondMerChnRate.ProtoReflect.Descriptor instead.
func (*CorrespondMerChnRate) Descriptor() ([]byte, []int) {
	return file_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *CorrespondMerChnRate) GetMerchantCode() string {
	if x != nil {
		return x.MerchantCode
	}
	return ""
}

func (x *CorrespondMerChnRate) GetChannelPayTypesCode() string {
	if x != nil {
		return x.ChannelPayTypesCode
	}
	return ""
}

func (x *CorrespondMerChnRate) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *CorrespondMerChnRate) GetPayTypeCode() string {
	if x != nil {
		return x.PayTypeCode
	}
	return ""
}

func (x *CorrespondMerChnRate) GetPayTypeCodeNum() string {
	if x != nil {
		return x.PayTypeCodeNum
	}
	return ""
}

func (x *CorrespondMerChnRate) GetDesignation() string {
	if x != nil {
		return x.Designation
	}
	return ""
}

func (x *CorrespondMerChnRate) GetDesignationNo() string {
	if x != nil {
		return x.DesignationNo
	}
	return ""
}

func (x *CorrespondMerChnRate) GetFee() float64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *CorrespondMerChnRate) GetHandlingFee() float64 {
	if x != nil {
		return x.HandlingFee
	}
	return 0
}

func (x *CorrespondMerChnRate) GetChFee() float64 {
	if x != nil {
		return x.ChFee
	}
	return 0
}

func (x *CorrespondMerChnRate) GetChHandlingFee() float64 {
	if x != nil {
		return x.ChHandlingFee
	}
	return 0
}

func (x *CorrespondMerChnRate) GetSingleMinCharge() float64 {
	if x != nil {
		return x.SingleMinCharge
	}
	return 0
}

func (x *CorrespondMerChnRate) GetSingleMaxCharge() float64 {
	if x != nil {
		return x.SingleMaxCharge
	}
	return 0
}

func (x *CorrespondMerChnRate) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *CorrespondMerChnRate) GetApiUrl() string {
	if x != nil {
		return x.ApiUrl
	}
	return ""
}

var File_transaction_proto protoreflect.FileDescriptor

var file_transaction_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xa1, 0x01, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x5f, 0x44, 0x46, 0x42, 0x12, 0x33, 0x0a, 0x03, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x03, 0x72, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x64, 0x4d, 0x65, 0x72, 0x43, 0x68, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x52, 0x04, 0x72, 0x61,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x38, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x44, 0x46, 0x42, 0x12, 0x22, 0x0a, 0x0c, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x22, 0xce,
	0x04, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x65, 0x72,
	0x63, 0x68, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x42, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61, 0x6e, 0x6b, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x61, 0x6e, 0x6b, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43,
	0x69, 0x74, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x42, 0x61, 0x6e, 0x6b, 0x43,
	0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x42, 0x61, 0x6e, 0x6b, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x44, 0x65, 0x66, 0x72, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x44, 0x65, 0x66, 0x72, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x65, 0x66, 0x72, 0x61, 0x79, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x44, 0x65, 0x66, 0x72, 0x61, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x44, 0x65, 0x66,
	0x72, 0x61, 0x79, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x44, 0x65, 0x66, 0x72, 0x61, 0x79, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x66, 0x72, 0x61, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x66, 0x72, 0x61, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x50,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x62, 0x4e, 0x6f, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x53, 0x75, 0x62, 0x4e, 0x6f, 0x22,
	0xa0, 0x04, 0x0a, 0x14, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x4d, 0x65,
	0x72, 0x43, 0x68, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x50, 0x61, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x03, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67,
	0x46, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x48, 0x61, 0x6e, 0x64, 0x6c,
	0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x68, 0x46, 0x65, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x43, 0x68, 0x46, 0x65, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x43, 0x68, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0d, 0x43, 0x68, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x69, 0x6e, 0x67, 0x46,
	0x65, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x43,
	0x68, 0x61, 0x72, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x4d, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x61, 0x78, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x61, 0x78,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x70,
	0x69, 0x55, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x70, 0x69, 0x55,
	0x72, 0x6c, 0x32, 0x66, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x57, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x5f, 0x44, 0x46, 0x42, 0x1a, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x5f, 0x44, 0x46, 0x42, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_transaction_proto_rawDescOnce sync.Once
	file_transaction_proto_rawDescData = file_transaction_proto_rawDesc
)

func file_transaction_proto_rawDescGZIP() []byte {
	file_transaction_proto_rawDescOnce.Do(func() {
		file_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_transaction_proto_rawDescData)
	})
	return file_transaction_proto_rawDescData
}

var file_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_transaction_proto_goTypes = []interface{}{
	(*ProxyOrderReq_DFB)(nil),    // 0: transaction.ProxyOrderReq_DFB
	(*ProxyOrderResp_DFB)(nil),   // 1: transaction.ProxyOrderResp_DFB
	(*ProxyPayOrderRequest)(nil), // 2: transaction.ProxyPayOrderRequest
	(*CorrespondMerChnRate)(nil), // 3: transaction.CorrespondMerChnRate
}
var file_transaction_proto_depIdxs = []int32{
	2, // 0: transaction.ProxyOrderReq_DFB.req:type_name -> transaction.ProxyPayOrderRequest
	3, // 1: transaction.ProxyOrderReq_DFB.rate:type_name -> transaction.CorrespondMerChnRate
	0, // 2: transaction.Transaction.ProxyOrderTranaction:input_type -> transaction.ProxyOrderReq_DFB
	1, // 3: transaction.Transaction.ProxyOrderTranaction:output_type -> transaction.ProxyOrderResp_DFB
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_transaction_proto_init() }
func file_transaction_proto_init() {
	if File_transaction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyOrderReq_DFB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyOrderResp_DFB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyPayOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CorrespondMerChnRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transaction_proto_goTypes,
		DependencyIndexes: file_transaction_proto_depIdxs,
		MessageInfos:      file_transaction_proto_msgTypes,
	}.Build()
	File_transaction_proto = out.File
	file_transaction_proto_rawDesc = nil
	file_transaction_proto_goTypes = nil
	file_transaction_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TransactionClient is the client API for Transaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionClient interface {
	ProxyOrderTranaction(ctx context.Context, in *ProxyOrderReq_DFB, opts ...grpc.CallOption) (*ProxyOrderResp_DFB, error)
}

type transactionClient struct {
	cc grpc.ClientConnInterface
}

func NewTransactionClient(cc grpc.ClientConnInterface) TransactionClient {
	return &transactionClient{cc}
}

func (c *transactionClient) ProxyOrderTranaction(ctx context.Context, in *ProxyOrderReq_DFB, opts ...grpc.CallOption) (*ProxyOrderResp_DFB, error) {
	out := new(ProxyOrderResp_DFB)
	err := c.cc.Invoke(ctx, "/transaction.Transaction/ProxyOrderTranaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionServer is the server API for Transaction service.
type TransactionServer interface {
	ProxyOrderTranaction(context.Context, *ProxyOrderReq_DFB) (*ProxyOrderResp_DFB, error)
}

// UnimplementedTransactionServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionServer struct {
}

func (*UnimplementedTransactionServer) ProxyOrderTranaction(context.Context, *ProxyOrderReq_DFB) (*ProxyOrderResp_DFB, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProxyOrderTranaction not implemented")
}

func RegisterTransactionServer(s *grpc.Server, srv TransactionServer) {
	s.RegisterService(&_Transaction_serviceDesc, srv)
}

func _Transaction_ProxyOrderTranaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProxyOrderReq_DFB)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).ProxyOrderTranaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transaction.Transaction/ProxyOrderTranaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).ProxyOrderTranaction(ctx, req.(*ProxyOrderReq_DFB))
	}
	return interceptor(ctx, in, info, handler)
}

var _Transaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transaction.Transaction",
	HandlerType: (*TransactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProxyOrderTranaction",
			Handler:    _Transaction_ProxyOrderTranaction_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "transaction.proto",
}
