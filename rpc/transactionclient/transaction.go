// Code generated by goctl. DO NOT EDIT!
// Source: transaction.proto

package transactionclient

import (
	"context"

	"github.com/copo888/transaction_service/rpc/transaction"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CorrespondMerChnRate = transaction.CorrespondMerChnRate
	PayOrder             = transaction.PayOrder
	PayOrderRequest      = transaction.PayOrderRequest
	PayOrderResponse     = transaction.PayOrderResponse
	ProxyOrderRequest    = transaction.ProxyOrderRequest
	ProxyOrderResp_XFB   = transaction.ProxyOrderResp_XFB
	ProxyOrderResponse   = transaction.ProxyOrderResponse
	ProxyPayOrderRequest = transaction.ProxyPayOrderRequest

	Transaction interface {
		ProxyOrderTranaction_DFB(ctx context.Context, in *ProxyOrderRequest, opts ...grpc.CallOption) (*ProxyOrderResponse, error)
		ProxyOrderTranaction_XFB(ctx context.Context, in *ProxyOrderRequest, opts ...grpc.CallOption) (*ProxyOrderResponse, error)
		PayOrderTranaction(ctx context.Context, in *PayOrderRequest, opts ...grpc.CallOption) (*PayOrderResponse, error)
	}

	defaultTransaction struct {
		cli zrpc.Client
	}
)

func NewTransaction(cli zrpc.Client) Transaction {
	return &defaultTransaction{
		cli: cli,
	}
}

func (m *defaultTransaction) ProxyOrderTranaction_DFB(ctx context.Context, in *ProxyOrderRequest, opts ...grpc.CallOption) (*ProxyOrderResponse, error) {
	client := transaction.NewTransactionClient(m.cli.Conn())
	return client.ProxyOrderTranaction_DFB(ctx, in, opts...)
}

func (m *defaultTransaction) ProxyOrderTranaction_XFB(ctx context.Context, in *ProxyOrderRequest, opts ...grpc.CallOption) (*ProxyOrderResponse, error) {
	client := transaction.NewTransactionClient(m.cli.Conn())
	return client.ProxyOrderTranaction_XFB(ctx, in, opts...)
}

func (m *defaultTransaction) PayOrderTranaction(ctx context.Context, in *PayOrderRequest, opts ...grpc.CallOption) (*PayOrderResponse, error) {
	client := transaction.NewTransactionClient(m.cli.Conn())
	return client.PayOrderTranaction(ctx, in, opts...)
}
