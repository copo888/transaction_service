// Code generated by goctl. DO NOT EDIT!
// Source: transaction.proto

package transactionclient

import (
	"context"

	"github.com/copo888/transaction_service/rpc/transaction"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CorrespondMerChnRate = transaction.CorrespondMerChnRate
	ProxyOrderReq_DFB    = transaction.ProxyOrderReq_DFB
	ProxyOrderResp_DFB   = transaction.ProxyOrderResp_DFB
	ProxyPayOrderRequest = transaction.ProxyPayOrderRequest

	Transaction interface {
		ProxyOrderTranaction(ctx context.Context, in *ProxyOrderReq_DFB, opts ...grpc.CallOption) (*ProxyOrderResp_DFB, error)
	}

	defaultTransaction struct {
		cli zrpc.Client
	}
)

func NewTransaction(cli zrpc.Client) Transaction {
	return &defaultTransaction{
		cli: cli,
	}
}

func (m *defaultTransaction) ProxyOrderTranaction(ctx context.Context, in *ProxyOrderReq_DFB, opts ...grpc.CallOption) (*ProxyOrderResp_DFB, error) {
	client := transaction.NewTransactionClient(m.cli.Conn())
	return client.ProxyOrderTranaction(ctx, in, opts...)
}
